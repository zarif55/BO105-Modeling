%% find_trim_inflow function

function[trim_inflow, CH_TPP_UH60_FF, CY_TPP_UH60_FF, beta, beta_dot, beta_star, theta, theta_dot, theta_star]...
    = find_trim_inflow(mu, psi, CT_constant_T, sigma, f, A,L_tr, R, vb, CP_UH60_FF, theta_tw,lambda_TPP_UH60_FF, ...
    omega, x_cg, y_cg, h, T, lock, a, cd0)
%% constants
CT = CT_constant_T(1);
k = 1.15;
M_yF_UH60_FF = 0;
M_xF_UH60_FF = 0;
M_yF_HtFF = M_yF_UH60_FF;
M_xF_HtFF = M_xF_UH60_FF;
CH_TPP_UH60_FF = 0;
CY_TPP_UH60_FF = 0;
epsilon = 1;
theta_tw = 0;
for m = 1:6
    CP_HtFF = ((k*CT.^2)./(2*mu)) + ((sigma.*cd0./8).*(1+(4.6.*mu.^2)))...
        +((1/2)*(f./A)*(mu.^3));
end
YF_W_FF = CP_HtFF*R/CT/L_tr;
%% defining functions
beta_1c = @(CH_TPP_UH60_FF) (-x_cg/h + M_yF_HtFF / (h * T)...
                    + (CH_TPP_UH60_FF / CT)) / (1 + ((vb^2 - 1)...
        / lock) / ((h * 2 * CT) / (R * sigma * a)));
beta_1s = @(CY_TPP_UH60_FF) (y_cg / h - M_xF_HtFF / (h * T)...
                + (CY_TPP_UH60_FF / CT)) / (1 + ((vb^2 - 1)...
        / lock) / (h * 2 * CT / (R * sigma * a)));
alpha_shaft = @(CH_TPP_UH60_FF) (x_cg / h - M_yF_HtFF / (h * T) + ((vb^2 - 1) / lock)...
        *(CH_TPP_UH60_FF / CT) / (h * 2 * CT / (R * sigma * a))) / (1 + ((vb^2 - 1)...
        / lock) / (h * 2 * CT / (omega * sigma * a)))...
        + 0.5 .* f .* mu.^2 / (A .* CT);
phi_shaft = @(CY_TPP_UH60_FF)(y_cg / h - M_xF_HtFF / (h * T) - ((vb^2 - 1) / lock)...
        * (CH_TPP_UH60_FF / CT) / (h .* 2 .* CT / (sigma * R * a))) / ...
        (1 + (vb^2 - 1) * R * sigma * a / (lock * 2 * h * CT)) - YF_W_FF;
theta_knot_fn = @(beta_1s_UH60_FF) ((6 .* CT / (sigma .* a)) .* (1 + 3 .* mu.^2 / 2)...
        + lambda_TPP_UH60_FF.* 1.5 .* (1 - 0.5 * mu.^2)...
        + 3 * mu .* beta_1s_UH60_FF .* (vb^2 - 1) / lock) ...
        / (1 - mu.^2 + 0.25 * 9 * (mu.^4));
    
theta_1s = @(beta_1c_UH60_FF, beta_1s_UH60_FF,theta_knot_UH60_FF)...
    - beta_1c_UH60_FF + (1 ./ (1 + 1.5 .* mu.^2)) ...
    .* (8 .* (vb.^2 - 1)...
        * beta_1s_UH60_FF / lock - (8 * mu / 3)...
        .* (theta_knot_UH60_FF - 3 .* lambda_TPP_UH60_FF .* 0.25));
    
beta_knot = @(beta_1c_UH60_FF, theta_1s_UH60_FF, theta_knot_UH60_FF)...
    (lock / (vb^2)) .* (theta_knot_UH60_FF ...
    .* (1 + mu.^2) / 8 + mu...
    .* (beta_1c_UH60_FF + theta_1s_UH60_FF) ./ 6 - lambda_TPP_UH60_FF ./ 6);
theta_1c = @(beta_1s_UH60_FF, beta_knot_UH60_FF, beta_1c_UH60_FF)...
    beta_1s_UH60_FF + (1 ./ (1 + 1.5.* mu.^2))...
        .* ((4/3.* mu.* beta_knot_UH60_FF)...
        + (8/lock) .* (vb^2 - 1) .* beta_1c_UH60_FF);
CH_TPP = @(theta_knot_UH60_FF, theta_1s_UH60_FF,...
    theta_1c_UH60_FF, beta_knot_UH60_FF) ...
    sigma*a*0.5*(1/2.*mu.* lambda_TPP_UH60_FF*theta_knot_UH60_FF- ...
        (beta_knot_UH60_FF.*theta_1c_UH60_FF/6)...
        +0.25*theta_1s_UH60_FF*lambda_TPP_UH60_FF...
        +0.25*mu*beta_knot_UH60_FF^2) ...
        + sigma*cd0*mu/ 4;
CY_TPP = @(theta_knot_UH60_FF, beta_knot_UH60_FF,...
    theta_1s_UH60_FF, theta_1c_UH60_FF) ...
    - sigma * a * 0.5 * (3 * mu* beta_knot_HtFF...
    * theta_knot_UH60_FF / 4 + 0.25 * theta_1c_UH60_FF * lambda_HtFF(m)...
        + beta_knot_HtFF * theta_1s_UH60_FF ...
        * (1 + 3 * mu^2) / 6 - 3 * mu...
        * beta_knot_HtFF * lambda_TPP_UH60_FF / 2);

theta_fn = @(theta_knot_UH60_FF, theta_1s_UH60_FF, theta_1c_UH60_FF, psi)...
    theta_knot_UH60_FF + theta_1c_UH60_FF.*cos(psi) + (theta_1s_UH60_FF.*sin(psi));
theta_dot_fn = @(theta_1s_UH60_FF, theta_1c_UH60_FF, psi) -...
    theta_1c_UH60_FF.*sin(psi) + theta_1s_UH60_FF.*cos(psi);
theta_star_fn = @(theta_dot) theta_dot./omega;

beta_fn = @(beta_knot_UH60_FF, beta_1s_UH60_FF, beta_1c_UH60_FF, psi) beta_knot_UH60_FF + (beta_1c_UH60_FF.*cos(psi)) + (beta_1s_UH60_FF.*sin(psi));
beta_dot_fn = @(beta_1s_UH60_FF, beta_1c_UH60_FF, psi) - beta_1c_UH60_FF.*sin(psi) + beta_1s_UH60_FF.*cos(psi);
beta_star_fn = @(beta_dot) beta_dot./omega;


% Based on mu., lambda, generate the data for plots
while epsilon > 0.004
    CY_TPP_old = CY_TPP_UH60_FF;
    beta_1c_UH60_FF = beta_1c(CH_TPP_UH60_FF);
    beta_1s_UH60_FF = beta_1s(CY_TPP_UH60_FF);

    alpha_shaft_UH60_FF = alpha_shaft(CH_TPP_UH60_FF);
    phi_shaft_UH60_FF = phi_shaft(CY_TPP_UH60_FF);

    theta_knot_UH60_FF = theta_knot_fn(beta_1s_UH60_FF);
    theta_1s_UH60_FF = theta_1s(beta_1c_UH60_FF, beta_1s_UH60_FF,theta_knot_UH60_FF);

    beta_knot_UH60_FF =  beta_knot(beta_1c_UH60_FF, theta_1s_UH60_FF, theta_knot_UH60_FF);
    theta_1c_UH60_FF = theta_1c(beta_1s_UH60_FF, beta_knot_UH60_FF, beta_1c_UH60_FF);

    CH_TPP_UH60_FF = CH_TPP(theta_knot_UH60_FF, theta_1s_UH60_FF,theta_1c_UH60_FF, beta_knot_UH60_FF);
    CY_TPP_UH60_FF = CY_TPP(theta_knot_UH60_FF, beta_knot_UH60_FF, theta_1s_UH60_FF, theta_1c_UH60_FF);

    epsilon = CY_TPP_UH60_FF - CY_TPP_old;
end
[beta_knot_grid, psi_grid] = meshgrid(beta_knot_UH60_FF, psi);
[beta_1s_grid, psi_grid] = meshgrid(beta_1s_UH60_FF, psi);
[beta_1c_grid, psi_grid] = meshgrid(beta_1c_UH60_FF, psi);

[theta_knot_grid, psi_grid] = meshgrid(theta_knot_UH60_FF, psi);
[theta_1s_grid, psi_grid] = meshgrid(theta_1s_UH60_FF, psi);
[theta_1c_grid, psi_grid] = meshgrid(theta_1c_UH60_FF, psi);

theta = theta_fn(theta_knot_grid, theta_1s_grid, theta_1c_grid, psi_grid);
theta_dot = theta_dot_fn(theta_1s_grid, theta_1c_grid, psi_grid);
theta_star = theta_star_fn(theta_dot);

beta = beta_fn(beta_knot_grid, beta_1s_grid, beta_1c_grid, psi_grid);
beta_dot = beta_dot_fn(beta_1s_grid, beta_1c_grid, psi_grid);
beta_star = beta_star_fn(beta_dot);

trim_inflow = [beta_1c_UH60_FF; beta_1s_UH60_FF; alpha_shaft_UH60_FF; phi_shaft_UH60_FF; theta_knot_UH60_FF; theta_1s_UH60_FF; beta_knot_UH60_FF; theta_1c_UH60_FF];

end